
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.ibm.watson.developer_cloud.professor_languo</groupId>
	<artifactId>professor-languo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Professor Languo App</name>
	<url>http://www.bluemix.net</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- If your server.env file is not set up, you will need to skip IT tests 
			by setting this to true in order for mvn install to finish without errors -->
		<skipITs>false</skipITs>
	</properties>

	<repositories>
		<repository>
			<id>Liberty</id>
			<name>Liberty Repository</name>
			<url>http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/maven/repository/</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<warName>professor-languo</warName>
					<webResources>
						<resource>
							<directory>libs</directory>
							<targetPath>WEB-INF/lib</targetPath>
							<includes>
								<include>**/*.jar</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<!-- Add source directory for integration tests -->
						<id>add-test-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-source</goal>
							<goal>add-resource</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
							<resources>
								<resource>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<!-- Add resource directory for integration tests -->
						<id>add-test-resource</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>2.18.1</version>
					<configuration>
						<skipITs>${skipITs}</skipITs>
						<systemPropertyVariables>
							<app.url>${app.url}</app.url>
							<automation.full.suite>${automation.full.suite}</automation.full.suite>
						</systemPropertyVariables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>Liberty</id>

			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>

			<properties>
				<automation.full.suite>false</automation.full.suite>
				<app.url>http://localhost:${liberty.http.port}</app.url>
			</properties>

			<pluginRepositories>
				<pluginRepository>
					<id>sonatype-nexus-snapshots</id>
					<name>Sonatype Nexus Snapshots</name>
					<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
					<snapshots>
						<enabled>true</enabled>
					</snapshots>
					<releases>
						<enabled>false</enabled>
					</releases>
				</pluginRepository>
			</pluginRepositories>

			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.9.1</version>
						<executions>
							<execution>
								<!-- Reserve a random free port for the Liberty HTTP port -->
								<phase>pre-integration-test</phase>
								<goals>
									<goal>reserve-network-port</goal>
								</goals>
								<configuration>
									<portNames>
										<portName>liberty.http.port</portName>
									</portNames>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<!-- Liberty plugin for running integration tests without deploying 
							to Bluemix. Installs Liberty if it doesn't already exist, creates a server 
							if it doesn't already exist, starts the server and deploys the app, and stops 
							the server after the integration tests complete. See https://github.com/WASdev/ci.maven -->
						<groupId>net.wasdev.wlp.maven.plugins</groupId>
						<artifactId>liberty-maven-plugin</artifactId>
						<!-- Only the new SNAPSHOT releases support installing Liberty from 
							the public repository -->
						<version>1.2-SNAPSHOT</version>
						<configuration>
							<install>
								<!-- Find the text after D/N on this page: http://public.dhe.ibm.com/ibmdl/export/pub/software/websphere/wasdev/downloads/wlp/8.5.5.5/lafiles/runtime/en.html -->
								<licenseCode>L-MCAO-9SYMVC</licenseCode>
								<version>8.5.5_08</version>
							</install>
							<appArchive>${project.build.directory}/professor-languo.war</appArchive>
							<configFile>${basedir}/src/it/resources/server.xml</configFile>
							<serverEnv>${basedir}/src/it/resources/server.env</serverEnv>
							<skip>${skipITs}</skip>
							<bootstrapProperties>
								<!-- Corresponds to a variable reference in src/it/resources/server.xml -->
								<httpPort>${liberty.http.port}</httpPort>
							</bootstrapProperties>
						</configuration>
						<executions>

							<execution>
								<id>Start Liberty server and deploy app</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start-server</goal>
									<goal>deploy</goal>
								</goals>
							</execution>

							<execution>
								<id>Undeploy app and stop Liberty server</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>undeploy</goal>
									<goal>stop-server</goal>
								</goals>
							</execution>

						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<version>2.18.1</version>
						<configuration>
							<forkCount>100</forkCount>
							<reuseForks>true</reuseForks>
							<parallel>methods</parallel>
							<useUnlimitedThreads>true</useUnlimitedThreads>
						</configuration>
						<executions>
							<execution>
								<id>Integration tests on local Liberty</id>
								<goals>
									<goal>integration-test</goal>
									<goal>verify</goal>
								</goals>
								<configuration>
									<reportsDirectory>${project.build.directory}/failsafe-reports-liberty</reportsDirectory>
									<summaryFile>${project.build.directory}/failsafe-reports-liberty/failsafe-summary.xml</summaryFile>
									<excludes>
										<exclude>**/selenium/</exclude>
									</excludes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile is only activated when running in Eclipse. It doesn't 
				affect the build itself- it only stores Eclipse m2e settings. -->
			<id>only-in-eclipse</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.codehaus.mojo</groupId>
												<artifactId>build-helper-maven-plugin</artifactId>
												<versionRange>[1.9.1,)</versionRange>
												<goals>
													<goal>add-resource</goal>
													<goal>add-test-source</goal>
													<goal>add-test-resource</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<ignore></ignore>
											</action>
										</pluginExecution>
										<!-- By default this plugin runs the gulp goal as part of incremental 
											builds. In our development process, a frontend developer will run 'gulp watch' 
											in a separate shell while developing, and the Eclipse incremental builder 
											will interfere with that. -->
										<!-- <pluginExecution> <pluginExecutionFilter> <groupId>com.github.eirslett</groupId> 
											<artifactId>frontend-maven-plugin</artifactId> <versionRange>[0.0.23,)</versionRange> 
											<goals> <goal>gulp</goal> </goals> </pluginExecutionFilter> <action> <execute> 
											<runOnIncremental>false</runOnIncremental> </execute> </action> </pluginExecution> -->
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-csv</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-core</artifactId>
			<version>2.2.7</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.2.7</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-core</artifactId>
			<version>5.1.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.lucene</groupId>
			<artifactId>lucene-queryparser</artifactId>
			<version>5.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.ibm.watson.developer_cloud.qa_framework</groupId>
			<artifactId>qa-framework</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		<dependency>
			<!-- jsoup HTML parser library @ http://jsoup.org/ -->
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>1.8.1</version>
		</dependency>

		<!-- New Dependencies for RnR Service -->
		<dependency>
			<groupId>com.ibm.watson.developer_cloud</groupId>
			<artifactId>java-sdk</artifactId>
			<version>2.8.0</version>
			<scope>system</scope>
			<systemPath>${project.basedir}/libs/java-sdk-2.8.0-jar-with-dependencies.jar</systemPath>
		</dependency>
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.10</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.4</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.4</version>
		</dependency>
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>4.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpcore</artifactId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpmime</artifactId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>1.18.3</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>jsr311-api</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.noggit</groupId>
			<artifactId>noggit</artifactId>
			<version>0.6</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.12</version>
		</dependency>
		<dependency>
			<groupId>org.apache.solr</groupId>
			<artifactId>solr-solrj</artifactId>
			<version>5.3.1</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>stax2-api</artifactId>
			<version>3.1.4</version>
		</dependency>
		<dependency>
			<groupId>org.codehaus.woodstox</groupId>
			<artifactId>woodstox-core-asl</artifactId>
			<version>4.4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>3.4.6</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>2.5.4</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.9.10.7</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.5.4</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.2.4</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wink</groupId>
			<artifactId>wink-json4j</artifactId>
			<version>1.2.1-incubating</version>
		</dependency>
		<dependency>
			<groupId>org.apache.wink</groupId>
			<artifactId>wink-json-provider</artifactId>
			<version>1.1.1-incubating</version>
		</dependency>

	</dependencies>
	<description>The top-level project for the Professor Languo application.</description>
	<organization>
		<name>IBM</name>
		<url>http://www.ibm.com</url>
	</organization>
	<packaging>war</packaging>
</project>
